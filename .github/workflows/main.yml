name: "Xinamine: build, upload and release"

on:
  push:
    branches:
      - emt
    paths-ignore:
      - ".gitignore"
  pull_request:
    branches:
      - emt
    paths-ignore:
      - ".gitignore"
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Procursus
        uses: dhinakg/procursus-action@main
        with:
          packages: ldid findutils sed coreutils trustcache make

      - name: Install THEOS (without SDKs)
        run: |
          set -x
          export BASEDIR="$(pwd)"
          export THEOS="${BASEDIR}/theos"
          mkdir -p $THEOS
          curl -fsSL https://raw.githubusercontent.com/theos/theos/master/bin/install-theos >> install-theos.sh
          gsed -E "/^\s*get_theos\s*$/,+1 s/^(\s*)(get_sdks)\s*$/\1mkdir -p \${THEOS}\/sdks\n\1touch \${THEOS}\/sdks\/sdk\n\1\2/g" -i install-theos.sh
          bash install-theos.sh
          cd $BASEDIR

      - name: Set Environment Variables
        run: |
          set -x
          T2=$(TZ=UTC-2 date +'%Y%m%d_%H%M%S')
          TS=$(date -j -f "%Y%m%d_%H%M%S" "${T2}" +%s)
          SHASH=$(git rev-parse --short HEAD)
          echo "ctime=${T2}" >> $GITHUB_ENV
          echo "ctimestamp=${TS}" >> $GITHUB_ENV
          echo "shorthash=${SHASH}" >> $GITHUB_ENV

      - name: Build
        run: |
          set -x
          export BASEDIR="$(pwd)"
          export THEOS="${BASEDIR}/theos"
          cd Binary
          gmake all
          cd ..
          gmake -j$(sysctl -n hw.physicalcpu) package

      - name: Upload Latest Artifact
        id: dopamine-latest-upload
        uses: actions/upload-artifact@v3
        with:
          name: deb
          path: |
            ${{ github.workspace }}/./packages/*.deb

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.ctime }}
          name: "Xinamine: ${{ env.shorthash }}_${{ env.ctime }}"
          draft: false
          prerelease: false
          files: |
            ${{ github.workspace }}/./packages/*.deb
